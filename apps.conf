BootStrap: yum
OSVersion: 7
#MirrorURL: http://mirror.centos.org/centos-%{OSVERSION}/%{OSVERSION}/os/$basearch/
MirrorURL: http://linux-ftp.jf.intel.com/pub/mirrors/centos/7.4.1708/os/$basearch/

Include: yum

%help
This container includes MILC and HACC apps. To get started:

What apps are installed?
	singularity apps tceApps.img
	milc
	hacc

Ask for help for a specific app!
	singularity help --app milc tceApps.img
	This is a container to run MILC binarie on SKL machine. just type singularity run milc.img and should run
	
Run a particular app
	singularity run --app milc tceApps.img

Run all the apps in the container
	singularity run tceApps.img

singularity inspect --app milc tceApps.img 
	{
		"SINGULARITY_APP_NAME": "milc",
		"SINGULARITY_APP_SIZE": "1MB"
	}


%setup
	echo "Copying the dist files into '$SINGULARITY_ROOTFS'"
	mkdir -p $SINGULARITY_ROOTFS/tempdir
	if [ ! -x "$SINGULARITY_ROOTFS/tempdir" ]; then
	   echo "failed to create tempdir directory..."
	   exit 1
	fi
	
	MILC="/localdisk/sdouyeb/milc/run/"
	HACC="/localdisk/sdouyeb/hacc/"
	cp -r $MILC. $SINGULARITY_ROOTFS/tempdir
	cp -r $HACC. $SINGULARITY_ROOTFS/tempdir
	if [ "$(ls -A $SINGULARITY_ROOTFS/tempdir/)" ]; then
	   echo "Files are copies here $SINGULARITY_ROOTFS/tempdir"
	   ls $SINGULARITY_ROOTFS/tempdir/
	fi

	chmod -R 777 $SINGULARITY_ROOTFS/tempdir/*

	exit 0
	
%post
	echo "Hello from inside the post container"
    
	export http_proxy="http://proxy-us.intel.com:911"
	export https_proxy="http://proxy-us.intel.com:912"
    
	#install run time libraries
	rpm --import https://yum.repos.intel.com/2018/setup/RPM-GPG-KEY-intel-psxe-runtime-2018
    rpm -Uhv https://yum.repos.intel.com/2018/setup/intel-psxe-runtime-2018-reposetup-1-0.noarch.rpm
    
	yum install intel-psxe-runtime -y
    
	echo "installing gcc"
	yum install gcc -y
	yum install bc -y

%runscript


##########################################################
# MILC
##########################################################
%apphelp milc
	This is a container to run MILC binarie on SKL machine. just type singularity run milc.img and should run

%appenv milc
	echo "set the env variable"
	OMP_NUM_THREADS=5
	KMP_AFFINITY='granularity=fine,scatter'

%appinstall milc
		
%apprun milc
	echo "This is what happens when you run the container..."
	source /opt/intel/psxe_runtime_2018.1.161/linux/bin/compilervars.sh intel64
	
	echo "run milc for SKL"
	cd $SINGULARITY_ROOTFS/tempdir/
	pwd
	mpiexec.hydra -n 8 $SINGULARITY_ROOTFS/tempdir/su3_rhmd_hisq.skx < $SINGULARITY_ROOTFS/tempdir/params.24x24x24x24 |tee /tmp/milc.su3_rhmd_hisq.log

	echo "parse milc results to $SINGULARITY_ROOTFS/tempdir"
	./parse_milc.sh -l qphix -m flops -r /tmp/milc.su3_rhmd_hisq.log

################################################################
# HACC
################################################################

%apphelp hacc
	This is a container to run HACC binarie on SKL machine. just type ./hacc.img and it should run
	If you want to increase/decrease the runtime, you can edit N_STEPS in this parameter file: ./params/indat.params.10steps
	For the results, In the output printed, look for this line that gives the runtime at the end:
	ACCUMULATED STATS
	total  max  6.765e+01 s  avg  6.765e+01 s  min  6.765e+01 s

%appefiles hacc
	#copy this file to the container
	hacc.skl.result.log /tempdir/
	
%appinstall hacc
	
%apprun hacc
	echo "This is what happens when you run the container..."
	echo "Run HACC"

	cd $SINGULARITY_ROOTFS/tempdir/
	echo "sourc env"
	pwd
	source ./sourceME.sh
	source env/bashrc.skl.generic

	result="/tmp/hacc.skl.result.log"
	./runme_skl |tee $result
	grep "total  max" $results

